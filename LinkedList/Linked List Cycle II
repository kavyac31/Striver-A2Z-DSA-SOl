public class Solution {
    public ListNode detectCycle(ListNode head) {
        /*HashMap<ListNode,Integer> d=new HashMap<>();
        ListNode t=head;
        
        int i=0;
        while(t!=null){
            if(d.containsKey(t)){
                int v=d.get(t);
                return v; 
            }
            d.put(t,i);
            i+=1;
            t=t.next;*/
        
       if (head == null || head.next == null) {
            return null; 
        } 
        ListNode slow = head;
        ListNode fast = head;
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
            if (slow == fast) {
                break;
            }
        }
        if (fast == null || fast.next == null) {
            return null;
        }
        slow = head;
        while (slow != fast) {
            slow = slow.next;
            fast = fast.next;
        }

        return slow;
        
    }
}
